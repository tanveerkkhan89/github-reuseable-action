name: mvn install and build docker image

on:
  workflow_call:
    inputs:
      java_version:
        description: 'Java version to use'
        required: true
        type: string
      docker_image_name:
        description: 'Docker image name'
        required: true
        type: string
      docker_build_args:
        description: 'Build arguments'
        required: false
        type: string
      organization:
        description: 'sonar arguments'
        required: true
        type: string
      projectKey:
        description: 'sonar arguments'
        required: true
        type: string
      ref_name:
        description: 'sonar arguments'
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      SONAR_TOKEN:
        required: true
    outputs:
      IMAGE_TAG:
        description: 'Docker image tag'
        value: ${{ jobs.build.outputs.IMAGE_TAG }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.extract_version.outputs.IMAGE_TAG }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java_version }}
          distribution: 'adopt'

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            GITHUB_TOKEN: ${{secrets.GIT_TOKEN}}
        with:
          args: >
            -Dsonar.organization=${{ inputs.organization}}
            -Dsonar.projectKey=${{ inputs.projectkey}}
            -Dsonar.branch.name=${{ github.ref_name }}

      - name: Build with Maven
        run: mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract application version
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          #IMAGE_TAG="${VERSION}-${GITHUB_SHA::7}"
          IMAGE_TAG="${VERSION}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:${{ env.IMAGE_TAG }} ${{ inputs.docker_build_args }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:${{ env.IMAGE_TAG }}
