# .github/workflows/deploy_pipeline.yml
name: Terraform actions workflow

on:
  workflow_call:
    inputs:
      terraform_version:
        description: 'The version of Terraform to use'
        required: false
        default: '1.9.4'
        type: string
      aws_region:
        description: 'The AWS region to use'
        required: false
        default: 'us-east-2'
        type: string
      tfvars_file:
        description: 'The path to the tfvars file'
        required: false
        default: 'vars.tfvars'
        type: string
      tf_workspace:
        description: 'The Terraform workspace to use'
        required: false
        default: 'default'
        type: string
      terraform_directory:
        description: 'The directory where Terraform files are located'
        required: false
        default: './'
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.terraform_directory }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}

      - name: Select Terraform Workspace
        run: |
           terraform workspace select -or-create=true ${{ inputs.tf_workspace }}
        working-directory: ${{ inputs.terraform_directory }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}

      - name: Terraform Plan
        run: terraform plan -lock=false -var-file=${{ inputs.tfvars_file }} -out=plan.out || exit 1
        working-directory: ${{ inputs.terraform_directory }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}

      - name: Terraform Apply
        run: terraform apply -lock=false -auto-approve plan.out
        working-directory: ${{ inputs.terraform_directory }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
